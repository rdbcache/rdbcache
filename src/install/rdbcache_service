#!/bin/bash
#
# doitincloud.rdbcache service
#
# chkconfig: 2345 99 01
#
# By Sam Wen @ 02/10/2018
#
##########################
return
pid_file=/var/run/doitincloud.rdbcache.pid
log_file=/var/log/doitincloud.rdbcache.log
app_file=/opt/doitincloud.rdbcache/doitincloud.rdbcache

is_running() {
  running=0
  if [ -f $pid_file ]; then
    pid=$(cat "$pid_file")
    cpid=$(ps -o pid= --ppid "$pid")
    ps -p "$pid" &> /dev/null
    if [ $? -ne 0 ]; then
      ps -p "$cpid" &> /dev/null
      if [ $? -ne 0 ]; then
        rm -f "$pid_file"
      else
        running=1
      fi
    else
      running=1
    fi
  fi
  echo $running
}

start() {
  if [[ "$(is_running)" -eq 0 ]]; then
    "$app_file" "$@" >> "$log_file" 2>&1 &
    pid=$!
    disown $pid
    echo "$pid" > "$pid_file"
    echo "OK! $0 started"
  else
    echo "$0 is running"
  fi
  return 0
}
stop() {
  if [[ "$(is_running)" -eq 1 ]]; then
    pid=$(cat "$pid_file")
    cpid=$(ps -o pid= --ppid "$pid")
    kill "$pid" "$cpid" &> /dev/null
    if [ $? -ne 0 ]; then
      echo "Failed to kill process $0"
      return 1
    fi
    for i in $(seq 1 15); do
      if [ "$(is_running)" -eq 0 ]; then
        echo "Stopped"
        return 0
      fi
      [[ $i -eq 10 ]] && kill "$pid" "$cpid" &> /dev/null
      sleep 1
    done
    echo "Failed to stop $0";
    return 1
  else
    echo "$0 is not running"
    return 0
  fi
}
status() {
  if [[ "$(is_running)" -eq 0 ]]; then
    echo "$0 is not running"
    return 1
  else
    echo "$0 is running"
    return 0
  fi
}
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo "Usage: $app_file { start | stop | restart status }"
    return 1
    ;;
esac
exit $?